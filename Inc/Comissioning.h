/*
 / _____)             _              | |
( (____  _____ ____ _| |_ _____  ____| |__
 \____ \| ___ |    (_   _) ___ |/ ___)  _ \
 _____) ) ____| | | || |_| ____( (___| | | |
(______/|_____)_|_|_| \__)_____)\____)_| |_|
    (C)2015 Semtech

Description: End device comissioning parameters

License: Revised BSD License, see LICENSE.TXT file include in the project

Maintainer: Miguel Luis and Gregory Cristian
*/
 /******************************************************************************
  * @file    comissioning.h
  * @author  MCD Application Team
  * @version V1.1.1
  * @date    01-June-2017
  * @brief   End device comissioning parameters
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics International N.V. 
  * All rights reserved.</center></h2>
  *
  * Redistribution and use in source and binary forms, with or without 
  * modification, are permitted, provided that the following conditions are met:
  *
  * 1. Redistribution of source code must retain the above copyright notice, 
  *    this list of conditions and the following disclaimer.
  * 2. Redistributions in binary form must reproduce the above copyright notice,
  *    this list of conditions and the following disclaimer in the documentation
  *    and/or other materials provided with the distribution.
  * 3. Neither the name of STMicroelectronics nor the names of other 
  *    contributors to this software may be used to endorse or promote products 
  *    derived from this software without specific written permission.
  * 4. This software, including modifications and/or derivative works of this 
  *    software, must execute solely and exclusively on microcontroller or
  *    microprocessor devices manufactured by or for STMicroelectronics.
  * 5. Redistribution and use of this software other than as permitted under 
  *    this license is void and will automatically terminate your rights under 
  *    this license. 
  *
  * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *
  ******************************************************************************
  */
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __LORA_COMISSIONING_H__
#define __LORA_COMISSIONING_H__

#ifdef __cplusplus
 extern "C" {
#endif

/* Exported types ------------------------------------------------------------*/
/* Exported constants --------------------------------------------------------*/
/* External variables --------------------------------------------------------*/
/* Exported macros -----------------------------------------------------------*/
/* Exported functions ------------------------------------------------------- */ 
/*!
 * When set to 1 the application uses the Over-the-Air activation procedure
 * When set to 0 the application uses the Personalization activation procedure
 */
#define OVER_THE_AIR_ACTIVATION                   1

/*!
 * Indicates if the end-device is to be connected to a private or public network
 */
#define LORAWAN_PUBLIC_NETWORK                      true // false //true
	
/*!
 * When set to 1 DevEui is LORAWAN_DEVICE_EUI
 * When set to 0 DevEui is automatically generated by calling
 *         BoardGetUniqueId function
 */
#define STATIC_DEVICE_EUI                     0


/*!
 * Mote device IEEE EUI (big endian)
 *
 * \remark see STATIC_DEVICE_EUI comments
 */
//#define LORAWAN_DEVICE_EUI                   { 0xFB, 0x01, 0xA1, 0xBB, 0x00, 0x05, 0xCC, 0x66 }     
#define LORAWAN_DEVICE_EUI  									 { 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09 }

/*!
 * Application IEEE EUI (big endian)
 */
#define LORAWAN_APPLICATION_EUI                     {0x70,0xB3,0xD5,0x7E,0xD0,0x01,0x0B,0xD3}
//#define LORAWAN_APPLICATION_EUI                     {0xAB,0x01,0xBB,0x02,0xFB,0xEE,0x10,0x01}

//{ 0xAA, 0xBB, 0xAA, 0xBB,0xAA, 0xBB, 0xAA, 0xBB }

/*!
 * AES encryption/decryption cipher application key
 */
//test05 925446A57B321B334816E56FD0B19FCD
//#define LORAWAN_APPLICATION_KEY      { 0x92,0x54,0x46,0xA5,0x7B,0x32,0x1B,0x33,0x48,0x16,0xE5,0x6F,0xD0,0xB1,0x9F,0xCD } 
//test04 DF3E821612236C8B80BA8C3F77DB5C57
//#define LORAWAN_APPLICATION_KEY      { 0xDF,0x3E,0x82,0x16,0x12,0x23,0x6C,0x8B,0x80,0xBA,0x8C,0x3F,0x77,0xDB,0x5C,0x57 } 
//test03	C4A8B007CAC478FD961C3A4DDF39A4FB
//#define LORAWAN_APPLICATION_KEY      { 0xC4,0xA8,0xB0,0x07,0xCA,0xC4,0x78,0xFD,0x96,0x1C,0x3A,0x4D,0xDF,0x39,0xA4,0xFB } 
//test02
//#define LORAWAN_APPLICATION_KEY    { 0x38,0x1B,0xB3,0xFF,0xAE,0x14,0xDF,0x3A,0x02,0x92,0x73,0x27,0x6F,0x04,0x81,0x20 }  // { 0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C }
//test01 C87B046A9D6BB37E70EB2351EEE328A5
//#define LORAWAN_APPLICATION_KEY    { 0xC8,0x7B,0x04,0x6A,0x9D,0x6B,0xB3,0x7E,0x70,0xEB,0x23,0x51,0xEE,0xE3,0x28,0xA5 }
//dev0
//#define LORAWAN_APPLICATION_KEY    { 0x2B, 0x61, 0xCB, 0x83, 0x4E, 0x6B, 0x53, 0xE2, 0x22, 0x7E, 0x67, 0x25, 0x24, 0x35, 0x9F, 0xC9 }  // { 0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C }
//lora_test
#define LORAWAN_APPLICATION_KEY    { 0x15,0x2D,0xCA,0x16,0x90,0xC0,0xCC,0x45,0x23,0x37,0x38,0x5A,0xB3,0x44,0x22,0x08 }  //152DCA1690C0CC452337385AB3442208
#if( OVER_THE_AIR_ACTIVATION == 0 )

/*!
 * Current network ID
 */
#define LORAWAN_NETWORK_ID                          ( uint32_t )0

/*!
 * When set to 1 DevAdd is LORAWAN_DEVICE_ADDRESS
 * When set to 0 DevAdd is automatically generated using
 *         a pseudo random generator seeded with a value derived from
 *         BoardUniqueId value
 */
#define STATIC_DEVICE_ADDRESS                     1
/*!
 * Device address on the network (big endian)
 *
 * \remark see STATIC_DEVICE_ADDRESS comments
 */
#define LORAWAN_DEVICE_ADDRESS                      ( uint32_t )0x2222222a//0x0100000a

/*!
 * AES encryption/decryption cipher network session key
 */
#define LORAWAN_NWKSKEY                             { 0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C }

/*!
 * AES encryption/decryption cipher application session key
 */
#define LORAWAN_APPSKEY                             { 0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C }

#endif /* OVER_THE_AIR_ACTIVATION == 0 */


#ifdef __cplusplus
}
#endif

#endif /* __LORA_COMISSIONING_H__ */
